// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OtusDbData.EF;

#nullable disable

namespace OtusDbData.Console.Migrations
{
    [DbContext(typeof(OtusDataDbContext))]
    partial class OtusDataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("integer");

                    b.Property<int>("StudentsId")
                        .HasColumnType("integer");

                    b.HasKey("CoursesId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("OtusDbData.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("LastUpdatedById")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LastUpdatedById");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 8, 22, 21, 0, 0, 0, DateTimeKind.Utc),
                            Description = "The 1st Course Description",
                            Level = 0,
                            Name = "The 1st Course"
                        },
                        new
                        {
                            Id = 2,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 8, 22, 21, 0, 0, 0, DateTimeKind.Utc),
                            Description = "The 2nd Course Description",
                            Level = 0,
                            Name = "The 2nd Course"
                        },
                        new
                        {
                            Id = 3,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 8, 22, 21, 0, 0, 0, DateTimeKind.Utc),
                            Description = "The 3th Course Description",
                            Level = 1,
                            Name = "The 3th Course"
                        },
                        new
                        {
                            Id = 4,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 8, 22, 21, 0, 0, 0, DateTimeKind.Utc),
                            Description = "The 4th Course Description",
                            Level = 1,
                            Name = "The 4th Course"
                        },
                        new
                        {
                            Id = 5,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 8, 22, 21, 0, 0, 0, DateTimeKind.Utc),
                            Description = "The 5th Course Description",
                            Level = 2,
                            Name = "The 5th Course"
                        });
                });

            modelBuilder.Entity("OtusDbData.Models.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Lessons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Description = "The First Lesson Descriprion",
                            Name = "The First Lesson"
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            Description = "The First Lesson Descriprion",
                            Name = "The First Lesson"
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            Description = "The First Lesson Descriprion",
                            Name = "The First Lesson"
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 4,
                            Description = "The First Lesson Descriprion",
                            Name = "The First Lesson"
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 5,
                            Description = "The First Lesson Descriprion",
                            Name = "The First Lesson"
                        });
                });

            modelBuilder.Entity("OtusDbData.Models.Level", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Levels");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Name = "Junior"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Middle"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Senior"
                        });
                });

            modelBuilder.Entity("OtusDbData.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("OtusDbData.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NickName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "A@A.A",
                            FirstName = "A_first",
                            LastName = "A_second",
                            NickName = "A_nick"
                        },
                        new
                        {
                            Id = 2,
                            Email = "B@B.B",
                            FirstName = "B_first",
                            LastName = "B_second",
                            NickName = "B_nick"
                        },
                        new
                        {
                            Id = 3,
                            Email = "C@C.C",
                            FirstName = "C_first",
                            LastName = "C_second",
                            NickName = "C_nick"
                        },
                        new
                        {
                            Id = 4,
                            Email = "D@D.D",
                            FirstName = "D_first",
                            LastName = "D_second",
                            NickName = "D_nick"
                        },
                        new
                        {
                            Id = 5,
                            Email = "E@E.E",
                            FirstName = "E_first",
                            LastName = "E_second",
                            NickName = "E_nick"
                        });
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("OtusDbData.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OtusDbData.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OtusDbData.Models.Course", b =>
                {
                    b.HasOne("OtusDbData.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OtusDbData.Models.User", "LastUpdatedBy")
                        .WithMany()
                        .HasForeignKey("LastUpdatedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("LastUpdatedBy");
                });

            modelBuilder.Entity("OtusDbData.Models.Lesson", b =>
                {
                    b.HasOne("OtusDbData.Models.Course", "Course")
                        .WithMany("Lessons")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("OtusDbData.Models.Student", b =>
                {
                    b.HasOne("OtusDbData.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OtusDbData.Models.Course", b =>
                {
                    b.Navigation("Lessons");
                });
#pragma warning restore 612, 618
        }
    }
}
